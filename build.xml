<project>

    <macrodef name="require">
        <attribute name="file"/>
        <attribute name="message" default="File @{file} not set or missing"/>
        <sequential>
            <fail message="@{message}">
                <condition>
                    <not>
                        <available file="@{file}" />
                    </not>
                </condition>
            </fail>
        </sequential>
    </macrodef>

    <!-- This ant script is used to build and deploy flogo apps to a TIBCO Data Plane -->
    <property environment="env"/>

    <fail message="Environment property TOKEN not set.">
        <condition>
            <not>
                <isset property="env.TOKEN"/>
            </not>
        </condition>
    </fail>

    <fail message="Environment property DP_BASE_URL not set.">
        <condition>
            <not>
                <isset property="env.DP_BASE_URL"/>
            </not>
        </condition>
    </fail>

    <fail message="Environment property CP_BASE_URL not set.">
        <condition>
            <not>
                <isset property="env.CP_BASE_URL"/>
            </not>
        </condition>
    </fail>

    <fail message="Environment property DP_ID not set.">
        <condition>
            <not>
                <isset property="env.DP_ID"/>
            </not>
        </condition>
    </fail>

    <fail message="Environment property APP_JSON not set.">
        <condition>
            <not>
                <isset property="env.APP_JSON"/>
            </not>
        </condition>
    </fail>

    <property name="dp_base_url" value="${env.DP_BASE_URL}"/>
    <property name="cp_base_url" value="${env.CP_BASE_URL}"/>
    <property name="dp_id" value="${env.DP_ID}"/>
    <property name="app_json" value="${env.APP_JSON}"/>
    <property name="token" value="${env.TOKEN}"/>

    <property name="provisioner_build_wait_interval" value="${env.PROVISIONER_BUILD_WAIT_INTERVAL}"/>
    <property name="provisioner_deploy_wait_interval" value="${env.PROVISIONER_DEPLOY_WAIT_INTERVAL}"/>
    <property name="provisioner_delete_wait_interval" value="${env.PROVISIONER_DELETE_WAIT_INTERVAL}"/>
    <property name="provisioner_scale_wait_interval" value="${env.PROVISIONER_SCALE_WAIT_INTERVAL}"/>
    <property name="provisioner_service_mesh_wait_interval" value="${env.PROVISIONER_SERVICE_MESH_WAIT_INTERVAL}"/>
    <property name="provisioner_public_endpoint_interval" value="${env.PROVISIONER_PUBLIC_ENDPOINT_INTERVAL}"/>


    <echo message="TOKEN: ${token}"/>
    <echo message="DP_BASE_URL ${dp_base_url}"/>
    <echo message="CP_BASE_URL ${cp_base_url}"/>
    <echo message="DP_ID ${dp_id}"/>
    <echo message="APP_JSON: ${app_json}"/>

    
    <target name="init">
    </target>

    <target name="clean" depends="delete-app-and-build">
      <delete file="./build.json"/>
      <delete file="./deploy.json"/>
      <delete file="./build-status.json"/>
      <delete file="./endpoint.json"/>
    </target>


    <target name="get-app-id" depends="">


        <exec executable="curl">
            <arg value="-X" />
            <arg value="GET" />
            <arg value="${cp_base_url}/cp/v1/apps?dp_id=${dp_id}" />
            <arg value="--header" />
            <arg value="accept: application/json" />    
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
            <arg value="--output" />
            <arg value="dp-apps.json" />
        </exec>

        <exec executable="jq" outputproperty="appid">
            <arg value="--raw-output"/>
            <arg value=".data[] | select(.app_name == &quot;flogo-hello-world&quot;) | select(.capability_id == &quot;FLOGO&quot;) | .app_id"/>
            <arg value="dp-apps.json"/>
        </exec>

        <echo message="${appid}"/>

    </target>

    <target name="build" depends="">
        
        <require file="./src/${app_json}" />

        <echo message="Building Flogo application from source ${app_json}"/>
        
        <exec executable="curl">
            <arg value="-X" />
            <arg value="POST" />
            <arg value="${dp_base_url}/v1/dp/builds" />
            <arg value="--header" />
            <arg value="accept: application/json" />
            <arg value="--header" />
            <arg value="Content-Type: multipart/form-data" />        
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
            <arg value="--form" />
            <arg value="app.json=@./src/${app_json}" />
            <arg value="--output" />
            <arg value="build.json" />
        </exec>

        <exec executable="jq" outputproperty="build_id">
            <arg value="--raw-output"/>
            <arg value=".buildId"/>
            <arg value="build.json"/>
        </exec>

        <echo message="Generated BUILD_ID: ${build_id}" />

        <!-- Need to sleep for at least 15 seconds as the build is asynchronous, waiting for the flogo provisioner to actually do its thing! -->
        <echo message="Waiting for Flogo Provisioner to complete (${provisioner_build_wait_interval} seconds)" />
        <sleep seconds="${provisioner_build_wait_interval}"/>

        <exec executable="curl">
            <arg value="-X" />
            <arg value="GET" />
            <arg value="${dp_base_url}/v1/dp/builds/${build_id}/status" />
            <arg value="--header" />
            <arg value="accept: application/json" />    
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
            <arg value="--output" />
            <arg value="build-status.json" />
        </exec>

        <exec executable="jq" outputproperty="build.status">
            <arg value="--raw-output"/>
            <arg value=".status"/>
            <arg value="./build-status.json"/>
        </exec>    

    
        <echo message="Build status was: ${build.status}"/>

        <fail message="Build failed: Property '.status' is not equal to 'Success'">
            <condition>
                <not>
                    <equals arg1="${build.status}" arg2="Success"/>
                </not>
            </condition>
        </fail>

    </target>



    <target name="deploy">
        <available file="./build.json" property="build.present"/>
        <antcall target="_deploy"/>
    </target>

    <target name="_deploy" depends="" if="build.present">

        <exec executable="jq" outputproperty="buildId">
            <arg value="--raw-output"/>
            <arg value=".buildId"/>
            <arg value="./build.json"/>
        </exec>

        <exec executable="jq" outputproperty="appName">
            <arg value="--raw-output"/>
            <arg value=".appName"/>
            <arg value="./deploy/app-deploy.json"/>
        </exec>

        <echo message="Deploying Flogo application ${appName} using BuildId ${buildId}"/>

        <exec executable="curl">
            <arg value="-X" />
            <arg value="POST" />
            <arg value="${dp_base_url}/v1/dp/builds/${buildId}/deploy" />
            <arg value="--header" />
            <arg value="accept: application/json" />
            <arg value="--header" />
            <arg value="Content-Type: application/json" />        
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
            <arg value="--data" />
            <arg value="@./deploy/app-deploy.json" />
            <arg value="--output" />
            <arg value="deploy.json" />
        </exec>

        <exec executable="jq" outputproperty="appId">
            <arg value="--raw-output"/>
            <arg value=".appId"/>
            <arg value="./deploy.json"/>
        </exec>

        <!-- Wait for Flogo Provisioner to deploy application -->
        <echo message="Waiting for Flogo Provisioner to complete (${provisioner_deploy_wait_interval} seconds)" />        
        <sleep seconds="${provisioner_deploy_wait_interval}"/>


        <echo message="Application ${appName} deployed as AppId ${appId}"/>


    </target>


    <target name="delete-build">
        <available file="./build.json" property="build.present"/>
        <antcall target="_delete-build"/>
    </target>

    <target name="_delete-build" depends="" if="build.present">

        <exec executable="jq" outputproperty="buildId">
            <arg value="--raw-output"/>
            <arg value=".buildId"/>
            <arg value="build.json"/>
        </exec>

        <exec executable="curl">
            <arg value="-X" />
            <arg value="DELETE" />
            <arg value="${dp_base_url}/v1/dp/builds/${buildId}" />
            <arg value="--header" />
            <arg value="accept: application/json" />    
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
        </exec>

        <echo message="Waiting for Flogo Provisioner to complete (${provisioner_delete_wait_interval} seconds)" />        
        <sleep seconds="${provisioner_delete_wait_interval}"/>

    </target>


    <target name="enable-service-mesh">
        <available file="./deploy.json" property="deploy.present"/>
        <antcall target="_enable-service-mesh"/>
    </target>

    <target name="_enable-service-mesh" depends="" if="deploy.present">

        <exec executable="jq" outputproperty="appId">
            <arg value="--raw-output"/>
            <arg value=".appId"/>
            <arg value="./deploy.json"/>
        </exec>        

        <echo message="Enabling Service Mesh for Flogo application ${appName} with AppId ${appId}"/>


        <exec executable="curl">
            <arg value="-X" />
            <arg value="PUT" />
            <arg value="${dp_base_url}/v1/dp/apps/${appId}/servicemesh?enable=true" />
            <arg value="--header" />
            <arg value="accept: application/json" />    
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
        </exec>


        <!-- Wait for Flogo Provisioner to enable service mesh sidecar pod for application -->
        <echo message="Waiting for Flogo Provisioner to complete (${provisioner_service_mesh_wait_interval} seconds)" />  
        <sleep seconds="${provisioner_service_mesh_wait_interval}"/>

    </target>


    <target name="enable-public-endpoints">
        <available file="./deploy.json" property="deploy.present"/>
        <antcall target="_enable-public-endpoints"/>
    </target>

    <target name="_enable-public-endpoints" depends="" if="deploy.present">

        <exec executable="jq" outputproperty="appId">
            <arg value="--raw-output"/>
            <arg value=".appId"/>
            <arg value="./deploy.json"/>
        </exec>        

        <echo message="Enabling Public Endpoints for Flogo application ${appName} with AppId ${appId}"/>

        <exec executable="curl">
            <arg value="-X" />
            <arg value="POST" />
            <arg value="${dp_base_url}/v1/dp/apps/${appId}/endpoints/public" />
            <arg value="--header" />
            <arg value="accept: application/json" />
            <arg value="--header" />
            <arg value="Content-Type: application/json" />        
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
            <arg value="--data" />
            <arg value="@./deploy/app-endpoint.json" />
            <arg value="--output" />
            <arg value="endpoint.json" />
        </exec>        

        <!-- Wait for Flogo Provisioner to enable public endpoints -->
        <echo message="Waiting for Flogo Provisioner to complete (${provisioner_public_endpoint_interval} seconds)" />  
        <sleep seconds="${provisioner_public_endpoint_interval}"/>


    </target>


    <target name="scale-app">
        <available file="./deploy.json" property="deploy.present"/>
        <antcall target="_scale-app"/>
    </target>

    <target name="_scale-app" depends="" if="deploy.present">

        <fail message="APP_SCALE not set.">
            <condition>
                <not>
                    <isset property="env.APP_SCALE"/>
                </not>
            </condition>
        </fail>

        <property name="scale" value="${env.APP_SCALE}"/>

        <exec executable="jq" outputproperty="appId">
            <arg value="--raw-output"/>
            <arg value=".appId"/>
            <arg value="./deploy.json"/>
        </exec>        

        <echo message="Scaling Flogo application ${appName} with AppId ${appId}"/>


        <exec executable="curl">
            <arg value="-X" />
            <arg value="PUT" />
            <arg value="${dp_base_url}/v1/dp/apps/${appId}/scale/${scale}" />
            <arg value="--header" />
            <arg value="accept: application/json" />    
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
        </exec>


        <!-- Wait for Flogo Provisioner to scale application -->
        <echo message="Waiting for Flogo Provisioner to complete (${provisioner_scale_wait_interval} seconds)" />  
        <sleep seconds="${provisioner_scale_wait_interval}"/>


    </target>

    <target name="delete-app">
        <available file="./deploy.json" property="deploy.present"/>
        <antcall target="_delete-app"/>
    </target>
    
    <target name="_delete-app" depends="" if="deploy.present">

        <exec executable="jq" outputproperty="appName">
            <arg value="--raw-output"/>
            <arg value=".appName"/>
            <arg value="./deploy/app-deploy.json"/>
        </exec>

        <exec executable="jq" outputproperty="appId">
            <arg value="--raw-output"/>
            <arg value=".appId"/>
            <arg value="./deploy.json"/>
        </exec>        

        <echo message="Deleting Flogo application ${appName} with AppId ${appId}"/>


        <!-- Scale to 0 -->

        <exec executable="curl">
            <arg value="-X" />
            <arg value="PUT" />
            <arg value="${dp_base_url}/v1/dp/apps/${appId}/scale/0" />
            <arg value="--header" />
            <arg value="accept: application/json" />    
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
        </exec>

        <echo message="Waiting for Flogo Provisioner to complete (${provisioner_scale_wait_interval} seconds)" />  
        <sleep seconds="${provisioner_scale_wait_interval}"/>

        <exec executable="curl">
            <arg value="-X" />
            <arg value="DELETE" />
            <arg value="${dp_base_url}/v1/dp/apps/${appId}" />
            <arg value="--header" />
            <arg value="accept: application/json" />    
            <arg value="--header" />
            <arg value="Authorization: Bearer ${token}" />
        </exec>

        <echo message="Waiting for Flogo Provisioner to complete (${provisioner_delete_wait_interval} seconds)" />  
        <sleep seconds="${provisioner_delete_wait_interval}"/>

    </target>

    <target name="delete-app-and-build" depends="delete-app, delete-build">
    </target>



</project>
